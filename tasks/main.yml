---
# tasks file for amazon_ssm_agent

- name: "Gathering facts"
  ansible.builtin.setup:
  when: ansible_facts|default({}) == {}

- name: "Gather AWS EC2 facts"
  amazon.aws.ec2_metadata_facts:
  when: not ansible_facts.get('ec2_metadata', False) and "molecule-notest" in ansible_skip_tags

# Molecule only to simulate amazon.aws.ec2_metadata_facts
- name: "Simulate EC2 metadata facts for Molecule"
  ansible.builtin.set_fact:
    ec2_metadata:
      instance_id: "i-1234567890abcdef0"
      instance_type: "t2.micro"
      availability_zone: "us-west-2a"
  when: molecule is defined and molecule

- name: "Distro Requirements"
  ansible.builtin.include_tasks: distro-requirements.yml

- name: "Become block"
  become: true
  when: distro_supported is true
  block:
    - name: "Remove"
      ansible.builtin.include_tasks: remove.yml
      when: amazon_ssm_agent_state == "absent" and ec2_instance_id is defined

    - name: "Install (Ubuntu)"
      ansible.builtin.include_tasks: install-Ubuntu.yml
      when: ansible_distribution == "Ubuntu" and amazon_ssm_agent_state == "present" and ('amazon-ssm-agent' not in ansible_facts.packages or amazon_ssm_agent_force_install) and ec2_instance_id is defined

    - name: "Install (Debian Family)"
      ansible.builtin.include_tasks: install-Debian.yml
      when: ansible_os_family == "Debian" and ansible_distribution != "Ubuntu" and amazon_ssm_agent_state == "present" and ('amazon-ssm-agent' not in ansible_facts.packages or amazon_ssm_agent_force_install) and ec2_instance_id is defined

    - name: "Install (RedHat Family)"
      ansible.builtin.include_tasks: install-RedHat.yml
      when: ansible_os_family == "RedHat" and amazon_ssm_agent_state == "present" and ('amazon-ssm-agent' not in ansible_facts.packages or amazon_ssm_agent_force_install) and ec2_instance_id is defined
